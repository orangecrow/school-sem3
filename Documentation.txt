                Documentation of first lab task
                         Adam Mruk 

		Sequence
Sequence is supposed to be a class template of a single linked list
the following are the public methods:

    Sequence()
  constructor
  
	Sequence(const Sequence&)
  copyconstructor
  
	Sequence& operator=(const Sequence&)
  assigmnent operator
  
	~Sequence()
  destructor
  
	int usr_ad(val_type)
  adds node of the provided val_type after head

	int rm_val(val_type)
   removes the first node with the given val_type, returns 0 on sucsess and 1 on failiure

	int rm_val_al(val_type)
   removes all the nodes with the given val_type

	int  usr_del()
  deletes all elements

	int pnal()print all node values
  print all node values

    int usr_cat(Sequence &a)
  copies and adds the data from the provided object

        Testing
	the testing in main is made of two functions: one testing on strings and one on intigers.
	it creates variables, assigns empty lists to itself to check for errors,
	adds some static and dynamic values ,prints them and checks the usr_cat method;

		Counter
Counter is supposed to be a class template of a linked list that stores the the keys and the number
of appearences of given keys. 

	Counter()
   constructor

	Counter(const Counter&)
   copyconstructor

	Counter& operator=(const Counter&)
   assigmnent operator

	~Counter()
   destructor

	int pnal()
   print all node values and the count. 

	int usr_ad(key)
   looks for the key and increases the count if it exists or adds a key
   returns 1 if the key was added and 0 if counter was increased.

	int usr_del()
   deletes all elements

	int rm_key(key)
   decreases the counter of the given key and removes the entry if its count is equal to 0.
   If returns 0 when the element is deleted 1 when counter is decreased and 2 when key is not found.

	int rm_key_al(key a)
   removes the node with the key entirely. returns 0 on success and 1 on failiure.

    int usr_cat(Sequence &a)
   copies and adds the data from the provided object

        Testing
	function int count_words(Counter<std::string>& cnt, std::istream& source)
	is supposed to take the istream and count the words inside the stream. 
	the implementation is rather trivial with one for loop.

	The testing is similar to the one of sequence with the addition of the count_words method test
    made with a txt file which can contain any set of words.
	
	in order to use the function countwords.cpp it should be first compiled into .o file and 
    then added to main compilation.
